<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4018.5">
  <POU Name="FB_EbaraDryPump" Id="{fa5a85fd-eab5-4a2b-a440-c1a901955592}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_EbaraDryPump
VAR_INPUT
	i_stBPGauge	:	ST_VG; //booster pump interlock gauge
	i_xVlvOpn	:	BOOL; //valve(s) to main system load are open
END_VAR
VAR_OUTPUT
END_VAR
VAR_IN_OUT
	stPump	:	ST_EbaraDryPump; //Ebara dry pump structure
END_VAR
VAR
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Ebara Dry Pump Control Routine
A. Wallace
2016-4-29
Applicable to:
EV-S20
EV-S50
EV-S100
EV-S200

Does basic controls for the pump. Starts booster pump when appropriate. Turns off pump
in the event of errors/ warnings. Provides interlocking interface.

Main Pump Operational Note:
Ebara recommends that the pump be exposed to the full system load after the main pump is running.

Booster Pump Operational Note:
The booster pump can either be started automatically by the pump itself (probably based on a timer?)
or it can be started by the PLC. The pressure setpoint is by default 30T. It may be wise to make
sure the pump was exposed to the full system load before starting the booster.

*)

//Mapping
stPump.xErr := stPump.i_xAlarm;
stPump.xWrn := stPump.i_xWarning;


//Interlock and error/warning
stPump.xIlk :=  stPump.xExtIlk AND NOT (stpump.i_xAlarm OR stpump.i_xWarning);

//Start/ Stop the pump
IF stpump.xIlk THEN
	stpump.q_xMPStart := stpump.i_xRunSW;
ELSE
	stpump.q_xMPStart := stpump.i_xRunSW := FALSE;
END_IF

//Booster pump
stpump.xBPIlk := i_xVlvOpn AND stpump.i_xMPStatus AND (i_stBPGauge.rPRESS < stpump.rBPIlkSP) AND i_stbpgauge.xPRESS_OK;
stpump.tonBP(IN:=stpump.xBPIlk);
stpump.q_xBPStart := stpump.tonBP.Q;]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>