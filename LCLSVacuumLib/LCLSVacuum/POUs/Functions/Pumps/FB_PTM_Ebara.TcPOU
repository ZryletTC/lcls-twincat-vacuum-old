<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4018.5">
  <POU Name="FB_PTM_Ebara" Id="{db9fdbdf-85bb-4e58-96cc-808f2a65a0e5}" SpecialFunc="None">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_PTM_Ebara
VAR_IN_OUT
	iq_stPTM : ST_EbaraPTM;
END_VAR
VAR_INPUT
	i_iADCBits : UINT := 15;
	i_iRawSpeed: INT; //Should come from PLC Soft IO.
END_VAR
VAR_OUTPUT
END_VAR
VAR
	TOF_SPEED : TOF := (PT:=T#0.5S); //Manual states momentary switches need to be closed for >= 0.3s
	TOF_START: TOF := (PT:=T#0.5S);
	TOF_STOP: TOF := (PT:=T#0.5S);
	TOF_RESET: TOF := (PT:=T#0.5S);
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* Switch processing *)
TOF_START.IN := iq_stPTM.q_xStart;
TOF_START();
iq_stPTM.q_xStart:=TOF_START.Q;
TOF_SPEED.IN := iq_stPTM.i_xSpeedSetSW;
TOF_SPEED();
iq_stPTM.q_xSpeedSetDO:=TOF_SPEED.Q;
TOF_STOP.IN  := iq_stPTM.q_xStop;
TOF_STOP();
iq_stPTM.q_xStop:=TOF_STOP.Q;
TOF_RESET.IN := iq_stPTM.q_xReset;
TOF_RESET();
iq_stPTM.q_xReset:=TOF_RESET.Q;


(* Basic pump supervisory section *)
(* We shouldn't need extra code to reset errors - users can control q_xReset themselves *)
	//If override mode, ignore everything else 
IF iq_stPTM.i_xOverride THEN
	iq_stPTM.q_xProtection:=TRUE;
	IF NOT iq_stPTM.q_RunDO AND iq_stPTM.i_xRunSW THEN
	iq_stPTM.q_RunDO:=TRUE;
	iq_stPTM.q_xStart:=TRUE;
	END_IF
	//Handle faults
ELSIF iq_stPTM.xFault THEN
	iq_stPTM.q_xProtection:=FALSE;
	iq_stPTM.q_RunDO:=FALSE;
	//One section for when pump is running and is told to stop...or ext. interlock goes out	
ELSIF iq_stPTM.q_RunDO AND (NOT iq_stPTM.i_xRunSW OR NOT iq_stPTM.xExtRunOk) THEN
	    iq_stPTM.q_xProtection:=TRUE;
		iq_stPTM.q_RunDO:=FALSE;
		iq_stPTM.q_xStop:=TRUE;
	//And one for when we need to start the pump normally...
ELSIF NOT iq_stPTM.q_RunDO AND iq_stPTM.i_xRunSW AND iq_stPTM.xExtRunOk THEN
	iq_stPTM.q_xProtection:=TRUE;
	iq_stPTM.q_RunDO:=TRUE;
	iq_stPTM.q_xStart:=TRUE;
END_IF 

(* Pump speed calculation *)
IF iq_stPTM.i_iRawSpeed * 10 / (EXPT(2,i_iADCBits)-1) >= 0.2 THEN //Speed reading appears to zero at ~0.16V
iq_stPTM.i_iCurSpd := LREAL_TO_DINT(INT_TO_LREAL(iq_stPTM.i_iRawSpeed)/(EXPT(2,i_iADCBits)-1)*67000);
//V (AI/(2^{# ADC bits} -1 ) * 10) * (33600 {Max RPM} - 100) / 5
ELSE
	iq_stPTM.i_iCurSpd := 0;
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>