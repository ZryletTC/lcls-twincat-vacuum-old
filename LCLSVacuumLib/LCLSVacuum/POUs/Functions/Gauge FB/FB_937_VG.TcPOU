<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.0.24">
  <POU Name="FB_937_VG" Id="{0483146b-b0e8-4c2d-b90b-7317630633a1}">
    <Declaration><![CDATA[FUNCTION_BLOCK FB_937_VG
VAR_IN_OUT
	VG : ST_VG;
END_VAR
VAR_INPUT
	PG	:	ST_VG := g_DummyVG;
END_VAR
VAR_OUTPUT
END_VAR
VAR
	rV	:	REAL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[(* 937A Logarithmic Output Conversion *)
(* 7-15-2015 *)
(* This function will read the pressure from any gauge. 
It does not provide ion gauge funtions. use FB_VG for that *)

rV := 10*INT_TO_REAL(VG.iPRESS_R)/32767;
VG.rPRESS := EXPT(10,((rV/0.6)-12));


(* Ion Gauge Protection Functions *)
(* If the PG pressure is greater than the VG.PRO_SP then the gauge is disabled *)
(* If the PG pressure is less than the VG.PRO_SP then the gauge is enabled *)
(* This FB also implements some hysteresis so the gauge doesn't have rapid power cycling while near the turn on boundary *)

IF PG.rPRESS < VG.rPRO_SP AND PG.wPG = 1 THEN

VG.xHV_DIS := NOT VG.xHV_SW;

ELSIF NOT VG.xHV_DIS THEN
	IF VG.rPRESS > VG.rPRO_SP + VG.rHYS_PR OR PG.rPRESS > VG.rPRO_SP + VG.rHYS_PR THEN
		VG.xHV_DIS := TRUE;
	END_IF
ELSE
	VG.xHV_DIS := TRUE;
END_IF


(* Pressure gauge OK checks *)
VG.xPRESS_OK := (rV <=9.6 ) AND (rV>=0.6); //legacy

IF (rV <=9.6 ) AND (rV>=0.6) THEN
	VG.wState := 1; // normal
ELSIF rV >= 0.18 AND rV <= 0.22 THEN
	VG.wState := 2; //LO
ELSIF rV >= 9.7 AND rV<= 9.9 THEN
	VG.wState := 3; //HIGH
ELSIF rV > 9.9 THEN
	VG.wState := 4; //other fault
ELSIF rV < 0.18 THEN
	VG.wState := 0; //not on
ELSE
	VG.wState := 9; // unknown state, something is really messed up
END_IF

(* Setpoint evaluation *)
VG.xAT_VAC := (VG.wState =1) AND VG.rPRESS < VG.rVAC_SP;



]]></ST>
    </Implementation>
    <ObjectProperties />
  </POU>
</TcPlcObject>